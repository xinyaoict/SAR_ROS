<?xml version="1.0"?>
<robot>

  <gazebo>
    <plugin name="uw_vel_cmd" filename="libuw_VelCmd.so">
      <robot_namespace>eye</robot_namespace>
    </plugin>
  </gazebo>

  <gazebo reference="base_link">
    <material>Gazebo/Black</material>
    <turnGravityOff>true</turnGravityOff>
    <mu1>10</mu1>
    <mu2>10</mu2>
    <kp value="100000000.0"/>
    <kd value="10000.0"/>
  </gazebo>

<!--
    raycount: number of actual rays used in gazebo
    rangeCount: number of range values made available to user
    If rayCount is less than rangeCount, it will interpolate.
-->
  
  <gazebo reference="sonar_link">
    <turnGravityOff>true</turnGravityOff>
    <material>Gazebo/Green</material>
    
    <sensor type="ray" name="ray_sensor">
      <always_on>true</always_on>
      <update_rate>15.0</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            
            
            <samples>280</samples>
            <resolution>1</resolution>            
            <min_angle>-0.39269875</min_angle>
            <max_angle>0.39269875</max_angle>
            
            <!--
            <samples>1</samples>
            <resolution>1</resolution>            
            <min_angle>0</min_angle>
            <max_angle>0</max_angle>
            -->            
            <!-- 130 degree
            <min_angle>-1.134464014</min_angle>
            <max_angle>1.134464014</max_angle>
            -->
          </horizontal>        
          <vertical>
            
            <samples>70</samples>
            <resolution>1</resolution>            
            <min_angle>-0.174532778</min_angle>
            <max_angle>0.174532778</max_angle>
            
            <!--
            <samples>1</samples>
            <resolution>1</resolution>            
            <min_angle>0</min_angle>
            <max_angle>0</max_angle>
            -->

            <!--
            <min_angle>-0.274532778</min_angle>
            <max_angle>0.274532778</max_angle>
            -->
          </vertical>          
        </scan>

        <range>
          <min>0.1</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
            
      <plugin name="gazebo_ros_imaging_sonar_controller" filename="libimaging_sonar.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <topicName>sonar_cloud</topicName>
        <frameName>sonar_link</frameName>
      </plugin>
      
      <!--
      <plugin name="gazebo_ros_imaging_sonar_controller" filename="libkevin_sensor.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <topicName>sonar_image</topicName>
        <frameName>sonar_link</frameName>
      </plugin>
      -->
      
      <!--<plugin name="gazebo_ros_ray_sensor_controller" filename="libgazebo_ros_block_laser.so">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>15.0</updateRate>
        <topicName>sonar_cloud</topicName>
        <frameName>sonar_link</frameName>
      </plugin>
      -->

    </sensor>
  </gazebo>

  
  <!-- camera -->
  <gazebo reference="camera_link">
    <turnGravityOff>true</turnGravityOff>
    <material>Gazebo/Red</material>
    
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>eye/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


  <!-- DEPTH SENSOR -->
  <gazebo reference="depth_link">
    <turnGravityOff>true</turnGravityOff>
    <material>Gazebo/Blue</material>

    <sensor name="depth_camera" type="depth">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>20</update_rate>
      <always_on>true</always_on>
      <camera>
        <horizontal_fov>1.745</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.01</near>
          <far>100</far>
        </clip>
      </camera>

      <plugin name="depth_camera_depth" filename="libgazebo_ros_depth_camera.so">
        <cameraName>depth_camera</cameraName>
        <alwaysOn>true</alwaysOn>
        <updateRate>20</updateRate>
        <imageTopicName>camera/image</imageTopicName>
        <depthImageTopicName>camera/depth_image</depthImageTopicName>
        <cameraInfoTopicName>camera/camera_info</cameraInfoTopicName>
        <depthCameraInfoTopicName>camera/depth_camera_info</depthCameraInfoTopicName>
        <depthImageCameraInfoTopicName>camera/depth_image_camera_info</depthImageCameraInfoTopicName>
        <frameName>depth_camera_depth_frame</frameName>        
      </plugin>
    </sensor>
  </gazebo>

</robot>
